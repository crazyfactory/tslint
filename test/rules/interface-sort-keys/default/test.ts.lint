export interface IAlphabet {
  aaa: string;
  bbb: string;
  ccc: string;
  cccAaa: string;
  cccc: string;
  ddd: {
    dddAaa: string;
    dddBbb: string;
  }
}

export interface IAlphabet {
  aaa: string;
  bbb: string;
  cccAaa: string;
  ~~~~~~           [This key is not sorted alphabetically]
  ccc: string;
  cccc: string;
}

export interface IAlphabet {
  aaa: string;
  bbb: string;
  ccc: string;
  cccc: string;
  ~~~~           [This key is not sorted alphabetically]
  cccAaa: string;
}

export interface IAlphabet {
  aaa: string;
  ddd: {
  ~~~     [This key is not sorted alphabetically]
    dddAaa: string;
    dddBbb: string;
  }
  bbb: string;
}

export interface IAlphabet {
  aaa: string;
  bbb: string;
  ddd: {
    dddBbb: string;
    ~~~~~~         [This key is not sorted alphabetically]
    dddAaa: string;
  }
}

export interface ArrStr {
  [key: string]: string | number; // Must accommodate all members
   ~~~~~~~~~~~                                                     [This key is not sorted alphabetically]

  [index: number]: string; // Can be a subset of string indexer

  // Just an example member
  length: number;
}
